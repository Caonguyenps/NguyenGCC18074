@model webtest.Models.TrainingStaff
@{
    ViewBag.Title = "Create Staff";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">

        <div class="col-md-6 col-12">
            <div class="form-group">
                @Html.LabelFor(model => model.training_id, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.training_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.training_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 col-12">
            <div class="form-group">
                @Html.LabelFor(model => model.training_name, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.training_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.training_name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="col-md-6 col-12">
            <div class="form-group">
                @Html.LabelFor(model => model.day_of_birth, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.day_of_birth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.day_of_birth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 col-12">
            <div class="form-group">
                @Html.LabelFor(model => model.phone_number, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.phone_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phone_number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 col-12">
            <div class="form-group">
                @Html.LabelFor(model => model.email_address, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.email_address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email_address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6 col-12">
            <div class="form-group">
                @Html.LabelFor(model => model.local_address, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(model => model.local_address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.local_address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.account_id, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.account_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.account_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-12 d-flex justify-content-end">
            <button type="submit" class="btn btn-primary me-1 mb-1">
                Create
            </button>
            <button onclick="location.href='@Url.Action("Index", "TrainingStaff")';return false;" class="btn btn-light-secondary me-1 mb-1">Back to List</button>
        </div>
    </div>
}